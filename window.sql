## Windows Function:
# 1. Rank the customers based on the total amount they've spent on rentals.
select c.customer_id, c.first_name, c.last_name, sum(p.amount) as total_spent,
Rank() over (order by sum(p.amount) desc) as Rank_spending
from customer c
join payment p on c.customer_id = p.customer_id
group by c.customer_id, c.first_name, c.last_name
order by total_spent desc;

# 2. Calculate the cumulative revenue generated by each film over time.
select f.film_id, f.title, p.payment_date, sum(p.amount) 
over (partition by f.film_id order by p.payment_date) 
as cumulative_revenue from film f
join inventory i on f.film_id = i.film_id
join rental r on i.inventory_id = r.inventory_id
join payment p on r.rental_id = p.rental_id
order by f.film_id, f.title, p.payment_date;

# 3. Determine the average rental duration for each film, considering films with similar lengths.

# 4. Identify the top 3 films in each category based on their rental counts.

# 5. Calculate the difference in rental counts between each customer's total rentals and the average rentals
# across all customers.

# 6. Find the monthly revenue trend for the entire rental store over time.

# 7. Identify the customers whose total spending on rentals falls within the top 20% of all customers.

# 8. Calculate the running total of rentals per category, ordered by rental count.

# 9. Find the films that have been rented less than the average rental count for their respective categories.

# 10. Identify the top 5 months with the highest revenue and display the revenue generated in each month.